import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'idea'

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        /*maven {
            url 'https://dl.bintray.com/yahoo/maven/'
        }*/
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.flogger:flogger:0.6'
    implementation 'info.picocli:picocli:4.6.1'
    implementation 'io.netty:netty-all:4.1.66.Final'
    implementation 'org.jetbrains:annotations:20.1.0'
    implementation 'net.jcip:jcip-annotations:1.0'
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.4'
    implementation 'com.google.inject:guice:5.0.1'

    implementation 'io.projectreactor.netty:reactor-netty-core:1.0.8'
    implementation 'io.projectreactor.netty:reactor-netty-http:1.0.8'

    // JMH
    implementation 'org.openjdk.jmh:jmh-core:0.9'
    implementation 'org.openjdk.jmh:jmh-generator-annprocess:0.9'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    runtimeOnly 'com.google.flogger:flogger-system-backend:0.6'

    // Key-Value stores
    implementation 'net.openhft:chronicle-map:3.21ea81'
    implementation 'org.deephacks.lmdbjni:lmdbjni:0.4.6'
    implementation 'org.lmdbjava:lmdbjava:0.8.1'
    implementation 'org.mapdb:mapdb:3.0.8'
//    implementation 'com.oath.halodb:halodb:0.5.3'   // 0.5.6

    def os
    if (Os.isFamily(Os.FAMILY_UNIX)) {
        os = "linux64"
    } else if (Os.isFamily(Os.FAMILY_MAC)) {
        os = "osx64"
    } else if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        os = "win64"
    }
    if (os) {
        implementation group: 'org.deephacks.lmdbjni', name: "lmdbjni-$os", version: '0.4.6'
    }

    // SQL
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.36.0.3'
}

sourceSets {
    main {
        java {
            srcDirs 'src'
        }
    }
}

run {
    systemProperty 'task', 'run'
}

application {
    applicationName = 'SimpleNettyServer'
    mainClassName = 'com.github.maxim5.snippets.netty.SimpleNettyServer'
    applicationDefaultJvmArgs = [
            '-Djava.util.logging.config.file=build/resources/main/logging.properties',
            '-Dtask=app'
    ]
}
